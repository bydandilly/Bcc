name: Anonymous FTP Download and Commit

# This allows you to run this workflow manually from the Actions tab in GitHub
on:
  workflow_dispatch:

jobs:
  ftp_sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        # This checks out your repository code so the action can modify and commit files
        uses: actions/checkout@v4
        with:
          # Fetch-depth is set to 0 to fetch all history, which is needed for the 'git commit' step
          fetch-depth: 0 

      - name: Install lftp
        # lftp is not pre-installed on GitHub runners, so we install it
        run: sudo apt-get update && sudo apt-get install -y lftp

      - name: Download from Anonymous FTP using lftp
        env:
          FTP_SERVER_IP: 208.76.221.205
          # The remote folder name, enclosed in quotes due to spaces and special characters
          FTP_REMOTE_PATH: "/Belmont Christian College (B+)"
          # The local directory where files will be saved in your repository
          LOCAL_DIR: "ftp_download_data"
        run: |
          echo "Connecting to $FTP_SERVER_IP..."
          # Create the local directory if it doesn't exist
          mkdir -p $LOCAL_DIR

          # The lftp command sequence:
          # open $IP: connects (and attempts anonymous login)
          # lcd $LOCAL_DIR: changes local directory
          # mirror ...: syncs remote folder to local directory
          #   -c: continue/resume transfers
          #   -e: delete files locally that no longer exist remotely (mirroring)
          #   --no-symlinks: ignores symbolic links
          #   --no-empty-dirs: avoids creating empty directory structures
          #   '$FTP_REMOTE_PATH' .: syncs the remote path to the current local directory (.)
          lftp -c "open $FTP_SERVER_IP; 
                  lcd $LOCAL_DIR; 
                  mirror -c -e --no-symlinks --no-empty-dirs '$FTP_REMOTE_PATH' . || exit 0"

      - name: Check for changes
        id: git_status
        run: |
          # Check if the download operation resulted in any file changes (add, modify, delete)
          if [[ $(git status --porcelain) ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "Changes detected. Preparing to commit."
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "No changes detected. Skipping commit."
          fi
          
      - name: Commit and Push if changes exist ðŸš€
        # This step only runs if changes were detected in the previous step
        if: steps.git_status.outputs.changes_detected == 'true'
        run: |
          # Configure Git user for the commit
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add the download directory contents to the commit
          git add $LOCAL_DIR
          
          # Commit the changes
          git commit -m "FTP Sync: Automated update of B+ files from anonymous FTP"
          
          # Push the changes to the repository
          git push

